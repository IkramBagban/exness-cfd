# Stage 1: Builder
FROM node:22-alpine AS builder
RUN apk add --no-cache libc6-compat openssl
WORKDIR /app

RUN corepack enable pnpm

COPY . .

RUN pnpm install --frozen-lockfile && \
    cd packages/db && npx prisma generate && \
    cd ../common && pnpm build && \
    cd ../services && pnpm build && \
    cd ../../apps/backend && pnpm build

# Stage 2: Runner
FROM node:22-alpine AS runner
RUN apk add --no-cache libc6-compat openssl
WORKDIR /app

ENV NODE_ENV=production

RUN corepack enable pnpm && \
    addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 backend

COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/backend/package.json ./apps/backend/
COPY packages/common/package.json ./packages/common/
COPY packages/services/package.json ./packages/services/
COPY packages/db/package.json ./packages/db/

RUN pnpm install --prod --frozen-lockfile

COPY --from=builder --chown=backend:nodejs /app/apps/backend/dist ./apps/backend/dist
COPY --from=builder --chown=backend:nodejs /app/packages/common/dist ./packages/common/dist
COPY --from=builder --chown=backend:nodejs /app/packages/services/dist ./packages/services/dist
COPY --from=builder --chown=backend:nodejs /app/packages/db ./packages/db

RUN cd packages/db && npx prisma generate

USER backend

WORKDIR /app/apps/backend

EXPOSE 3000

CMD ["node", "dist/index.js"]